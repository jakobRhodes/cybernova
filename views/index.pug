extends layout
block layout-content
  div.View.WelcomeView
    h1.Banner 
      div.Logo CYBERNOVA
      div.Login
        if isAuthenticated
          a(href="/user")
            div.LoginButton Just dive in!
        else
          a(href="/login")
            div.LoginButton Login
    h1.NavBar
      a(href="/") 
        div.NavBarButton Home
      a(href="/wip") 
        div.NavBarButton Projects 
      a(href="/wip") 
        div.NavBarButton Mods
      a(href="/wip") 
        div.NavBarButton Homebrew
      a(href="/wip") 
        div.NavBarButton Images
      a(href="/wip") 
        div.NavBarButton Creator
    div.Body
      div.Title What I learned from creating this website!
      div.Post(id="remove")
        div.PostContent
        p Creating a website using Node.js has been an incredible learning experience for me. Throughout this journey, I've gained a plethora of knowledge and skills that have transformed my understanding of web development. First and foremost, I delved deep into the world of JavaScript. Node.js, being built on the JavaScript runtime, required me to have a strong grasp of the language. I honed my skills in variables, data types, functions, control flow, and object-oriented programming. This solid foundation allowed me to write efficient server-side code, handle incoming requests, and manipulate data seamlessly.
        p One of the most enlightening aspects of working with Node.js was exploring its extensive collection of core modules. I became intimately familiar with modules like http and https, which enabled me to create robust web servers. The fs module opened up a world of possibilities for interacting with the file system, while the path module made working with file paths a breeze. Additionally, the util module proved to be invaluable for various utility functions and enhanced code readability.
        p Furthermore, diving into the world of Node.js exposed me to the power of asynchronous programming. The event-driven, non-blocking nature of Node.js was a paradigm shift for me. Through the use of callbacks, promises, and async/await syntax, I learned how to handle multiple requests concurrently, improve performance, and avoid blocking the server's event loop. This proficiency in asynchronous programming greatly expanded my ability to create scalable and responsive web applications.
        p Another crucial aspect of developing websites with Node.js was learning about package management and utilizing the npm (Node Package Manager) ecosystem. I discovered an incredible range of open-source libraries and frameworks that accelerated my development process. Whether it was Express.js for building web applications, Socket.io for real-time communication, or Passport.js for authentication, npm provided an extensive array of reliable and well-maintained packages that significantly boosted my productivity.
        p Moreover, my journey with Node.js exposed me to the concept of middleware. Middleware acted as a powerful tool for handling common tasks such as authentication, logging, and error handling. I learned how to leverage existing middleware packages and even create custom middleware tailored to the specific needs of my projects. This not only enhanced the functionality of my websites but also made my code more modular and maintainable.
        p In summary, my experience of creating websites using Node.js has been transformative. From mastering JavaScript fundamentals and exploring core modules to embracing asynchronous programming and harnessing the vast npm ecosystem, this journey has equipped me with a diverse set of skills. I now possess the knowledge and expertise to create high-performance, scalable, and feature-rich web applications that leverage the power of Node.js.
    div.Widgets
      div.CommentHeader
      div.CommentBox
        div.CommentForm
          h2 Leave a Comment!
          form(role='form' method='POST' action='/comment' id="commentForm")
            label(for='name') Name:
            input#name.form-control(type='text', placeholder='' name='name')
            <br>
            label(for='email') Email: 
            input#email.form-control(type='email', placeholder='' name='email')
            <br><br>
            textarea#commentText(name='text' rows='2' cols='35' maxlength="140" form="commentForm" placeholder="Type comment here...")
            <br><br>
            input(type='submit' value='Submit')
        div.CommentExplain
          h2 How it works!
          p This comment section works by connecting through a tunnel via QuotaGuard to an automatic database hosted on Oracle Cloud. It connects using node oracleDB and uses SQL to retireve and insert comments into the database.
          div.CommentExplainLinkBox
            div.CommentExplainLink
              a(href='https://www.quotaguard.com/') QuotaGuard
            div.CommentExplainLink  
              a(href='https://cloud.oracle.com/') Oracle Cloud
      div.MidImage
        p test
      div.CommentSection(id="commentSection")
          - for (var i = 0; i < data.length; i++)
            div.Comment(name='newComment')
              .CommentDisplayTop(name='CommentDisplay')
                .CommentorIcon  
                .CommentorName
                  =data[i]['NAME']
                .CommentorEmail
                  =data[i]['EMAIL']
              .CommentDisplayBottom(name='CommentDisplayText')
                =data[i]['TEXT']
            <br>
  div.Footer
    a(href='/about').FooterItem About Me
    a(href='/contact').FooterItem Contact Info <br>
    a(href='/support').FooterItem Support Me <br>
    a(href='https://github.com/jakobRhodes').FooterItem My Github <br>
    div.FooterBanner 
      div.FooterBannerItem Privacy Policy
      div.FooterBannerItem |
      div.FooterBannerItem Terms of Service
      div.FooterBannerItem |
      div.FooterBannerItem Follow Me
      div.FooterBannerCopyright @ 2023 CYBERNOVA.COM ALL RIGHTS RESERVED
